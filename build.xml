<?xml version="1.0" encoding="UTF-8"?>

<project name="Aimeos" default="all">

	<property name="coredir" value="${project.basedir}" override="false" />
	<property name="extdir" value="${project.basedir}/ext" override="false" />
	<property name="bindir" value="${project.basedir}/vendor/bin/" override="false" />


	<target name="setup" description="Sets up database incl. unit test data">
		<echo msg="Setting up test database" />
		<exec command="php ${coredir}/up.php -vvv unittest unittest"
			checkreturn="true" logoutput="true" passthru="true" />
	</target>

	<target name="setupperf" description="Sets up database incl. performance test data">
		<echo msg="Setting up performance data" />
		<exec command="php ${coredir}/up.php unitperf unitperf"
			checkreturn="true" logoutput="true" passthru="true" />
	</target>


	<target name="coverage" description="Creates coverage reports" depends="clean">
		<echo msg="Generating code coverage report" />
		<exec command="${bindir}phpunit --configuration=phpunit-coverage.xml"
			dir="tests" checkreturn="true" logoutput="true" passthru="true" />
		<phing target="coverage" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<exclude name=".*/phing.xml" />
				<include name="*/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="coverageext" description="Creates coverage report for specific extension directory">
		<phing target="coverage" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="test" description="Executes unit tests" depends="clean">
		<echo msg="Executing unit tests" />
		<exec command="${bindir}phpunit --configuration=phpunit.xml"
			dir="tests" checkreturn="true" logoutput="true" passthru="true" />
		<phing target="test" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<exclude name=".*/phing.xml" />
				<include name="*/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="testext" description="Executes tests of specific extension directory">
		<phing target="test" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="check" description="Executes all checks">
		<echo msg="Executing code sniffer" />
		<property name="codestddir" value="${project.basedir}/misc/coding" override="true" />
		<exec command="${bindir}phpcs -n --standard=${codestddir}/Aimeos src/ tests/*/"
			checkreturn="true" logoutput="true" passthru="true" />
		<phing target="check" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<exclude name=".*/phing.xml" />
				<include name="*/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="checkext" description="Executes checks of specific extension directory">
		<property name="codestddir" value="${project.basedir}/misc/coding" override="true" />
		<phing target="check" haltonfailure="true" dir="${dir}" phingfile="phing.xml" />
	</target>


	<target name="clean" description="">
		<delete dir="tests/tmp" quiet="true" failonerror="false" />
		<delete file="tests/confdoc.ser" quiet="true" failonerror="false" />
		<delete file="tests/coverage.xml" quiet="true" failonerror="false" />
		<delete file="tests/coveralls.json" quiet="true" failonerror="false" />
		<delete quiet="true" failonerror="false" >
			<fileset dir="tests">
				<include name="*.log" />
			</fileset>
		</delete>
	</target>


	<target name="doc" description="Generates the documentation" depends="test">
		<taskdef name="confdoc" classname="MShopConfigDocTask" classpath="${coredir}/misc/phing" />
		<mkdir dir="${coredir}/misc/confdoc/" />
		<echo msg="Generating config documentation" />
		<confdoc prefix="madmin" keyparts="2"
			optfile="${coredir}/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${coredir}/src/MAdmin" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="mshop" keyparts="2"
			optfile="${coredir}/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${coredir}/src/MShop" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
			<fileset dir="${extdir}/ai-laravel/src/MShop" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
			<fileset dir="${extdir}/ai-typo3/src/MShop" expandsymboliclinks="true" >
				<include name="**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="admin/jqadm" keyparts="1"
			optfile="${extdir}/ai-admin-jqadm/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${extdir}/ai-admin-jqadm" expandsymboliclinks="true" >
				<include name="templates/**/*.php" />
				<include name="config/**/*.php" />
				<include name="src/**/*.php" />
			</fileset>
			<fileset dir="${extdir}/ai-cms-grapesjs" expandsymboliclinks="true" >
				<include name="config/**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="admin/jsonadm" keyparts="1"
			optfile="${extdir}/ai-admin-jsonadm/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${extdir}/ai-admin-jsonadm" expandsymboliclinks="true" >
				<include name="templates/**/*.php" />
				<include name="config/**/*.php" />
				<include name="src/**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="client/html" keyparts="2"
			optfile="${extdir}/ai-client-html/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${extdir}/ai-client-html" expandsymboliclinks="true" >
				<include name="templates/**/*.php" />
				<include name="config/**/*.php" />
				<include name="src/**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="client/jsonapi" keyparts="1"
			optfile="${extdir}/ai-client-jsonapi/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${extdir}/ai-client-jsonapi/" expandsymboliclinks="true" >
				<include name="templates/**/*.php" />
				<include name="src/**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="controller/jobs" keyparts="2"
			optfile="${extdir}/ai-controller-jobs/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${extdir}/ai-controller-jobs" expandsymboliclinks="true" >
				<include name="templates/**/*.php" />
				<include name="config/**/*.php" />
				<include name="src/**/*.php" />
			</fileset>
		</confdoc>
		<confdoc prefix="controller/frontend" keyparts="1"
			optfile="${extdir}/ai-controller-frontend/tests/confdoc.ser"
			outdir="${coredir}/misc/confdoc">
			<fileset dir="${extdir}/ai-controller-frontend" expandsymboliclinks="true" >
				<include name="config/**/*.php" />
				<include name="src/**/*.php" />
			</fileset>
		</confdoc>
	</target>


	<target name="clean" description="Cleans up temporary files">

		<phing target="clean" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<exclude name=".*/phing.xml" />
				<include name="*/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="i18n" description="Creates all translation files">
		<exec command="find ./src/MAdmin ./src/MShop -type f | xgettext -j -s --no-location --no-wrap --add-comments=/// --language=PHP --from-code=UTF-8 --keyword=sprintf:1 --keyword=dt:2,2t --keyword=dn:2,3,4t -o i18n/mshop/core-mshop.pot -f -"
			checkreturn="true" logoutput="true" />
		<foreach list="i18n/country,i18n/currency,i18n/language,i18n/mshop" param="i18n-dir" target="i18n-files" />
		<phing target="i18n" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<exclude name=".*/phing.xml" />
				<include name="*/phing.xml" />
			</fileset>
		</phing>
	</target>

	<target name="i18n-files" description="Updates translation message files in passed directory">
		<foreach param="po-fname" absparam="po-filename" target="i18n-update">
			<fileset dir="${i18n-dir}">
				<include name="*.po" />
			</fileset>
		</foreach>
	</target>

	<target name="i18n-update" description="Updates translation message files">
		<fail unless="po-filename" message="Missing file name" />
		<echo msg="File: ${po-filename}" />
		<exec command="msgmerge --no-wrap -s -U --backup=none ${po-filename} ${i18n-dir}/*.pot" checkreturn="true" logoutput="true" />
	</target>


	<target name="build" description="Creates all files to be generated" >
		<exec command="tx pull -a -f --minimum-perc=1" checkreturn="true" logoutput="true" passthru="true" />
		<foreach param="po-fname" absparam="po-filename" target="build-mo">
			<fileset dir="./i18n">
				<include name="**/*.po" />
			</fileset>
		</foreach>
		<phing target="build" haltonfailure="true">
			<fileset dir="${extdir}" expandsymboliclinks="true" >
				<exclude name=".*/phing.xml" />
				<include name="*/phing.xml" />
			</fileset>
		</phing>
	</target>


	<target name="build-mo" description="Generates binary translation files">
		<fail unless="po-filename" message="Missing file name" />
		<echo msg="File: ${po-filename}" />
		<exec command="msgfmt --statistics -c -o `echo ${po-filename} | sed s/\.po//` ${po-filename}"
			checkreturn="true" logoutput="true" passthru="true" />
	</target>


	<target name="createext" description="Creates new extension">
		<propertyprompt propertyName="extname" promptText="Enter extension name (only A-Z, a-z, 0-9 and -)" promptCharacter=":" useExistingValue="true"/>
		<copy todir="${extdir}/${extname}" >
			<fileset dir="${coredir}/misc/ext-template">
				<include name="**" />
			</fileset>
		</copy>
		<reflexive>
			<fileset dir="${extdir}/${extname}">
			<include name="**" />
			</fileset>
			<filterchain>
			<replaceregexp>
				<regexp pattern="&lt;extname&gt;" replace="${extname}"/>
			</replaceregexp>
			</filterchain>
		</reflexive>
	</target>


	<target name="all" depends="setup,test,check" description="Executes all essential targets for testing" />

</project>
